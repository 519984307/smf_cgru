cmake_minimum_required(VERSION 2.6.4)
project(afanasy)

set(CMAKE_BUILD_TYPE "Release")

if( ( NOT $ENV{AF_PYTHON_INCLUDE_PATH} STREQUAL "") AND ( NOT $ENV{AF_PYTHON_LIBRARIES} STREQUAL "" ) )
	set(PYTHON_INCLUDE_PATH $ENV{AF_PYTHON_INCLUDE_PATH})
	set(PYTHON_LIBRARIES $ENV{AF_PYTHON_LIBRARIES})
	message("Using specified python = '${PYTHON_INCLUDE_PATH}'")
else( ( NOT $ENV{AF_PYTHON_INCLUDE_PATH} STREQUAL "") AND ( NOT $ENV{AF_PYTHON_LIBRARIES} STREQUAL "" ) )
	find_package(PythonLibs REQUIRED)
endif( ( NOT $ENV{AF_PYTHON_INCLUDE_PATH} STREQUAL "") AND ( NOT $ENV{AF_PYTHON_LIBRARIES} STREQUAL "" ) )

if(UNIX)
	if(APPLE)
		set(CMAKE_OSX_ARCHITECTURES "x86_64")
		#Changing the order of configurations to be sure release is the first one
		set(CMAKE_CONFIGURATION_TYPES "Release")
		add_definitions(-DMACOSX)
	else(APPLE)
		add_definitions(-DLINUX)
	endif(APPLE)
endif(UNIX)
if(WIN32)
	add_definitions(-DWINNT)
endif(WIN32)

include_directories(${PYTHON_INCLUDE_PATH})

set( CMAKE_RUNTIME_OUTPUT_DIRECTORY "../../../bin")
set( CMAKE_LIBRARY_OUTPUT_DIRECTORY "../../../bin")

add_subdirectory(libafanasy)
add_subdirectory(libafapi)
if(NOT DEFINED PYAF_ONLY)
   #These projects are not currently supported for Windows platform
   if(NOT WIN32)
      add_subdirectory(libafnetwork)
      add_subdirectory(libafsql)
      add_subdirectory(cmd)
      add_subdirectory(server)
   endif(NOT WIN32)
   add_subdirectory(libafqt)
   add_subdirectory(render)
   add_subdirectory(talk)
   add_subdirectory(watch)
   add_subdirectory(monitor)
endif(NOT DEFINED PYAF_ONLY)
add_subdirectory(libpyaf)
